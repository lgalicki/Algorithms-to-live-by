"""
Created on Tue Dec 17 17:56:37 2019

@author: luciano

This has the various methods of choosing how to behave with a multi-armed bandit.
You should use bandits defined in bandit.py. All methods return a Result object,
so comparision between the methods gets easier.
"""
from random import randint
from bandit import Bandit
from bandit import Result
from cleaner import clear_screen

def randomized(bandit, nr_plays):
    """
    Plays n ammount of times the arms choosing in a completely random fashion.

    Parameters
    ----------
    bandit : Bandit
        A Bandit object.
    nr_plays : int
        The ammount of times you wish to play the bandit's arms

    Returns
    -------
    result : Result
        As defined by the class Result.
    """
    #First let's allocate the result object
    result = Result(bandit)

    #Now let's randomly choose arms to play
    for _ in range(nr_plays):
        random_arm = randint(0, len(bandit) - 1)
        play_result = bandit.play_arm(random_arm)

        #Registering the result
        if play_result:
            result.win(random_arm)
        else:
            result.loss(random_arm)

    return result


if __name__ == '__main__':
    while True:
        try:
            clear_screen()
            QT_ARMS = int(input('How many arms should the bandit have? '))
        except:
            continue
        else:
            if QT_ARMS > 0:
                break
            continue

    while True:
        try:
            QT_PLAYS = int(input('How times do you want to play the bandit? '))
        except:
            continue
        else:
            if QT_PLAYS > 0:
                break
            continue

    BANDIT = Bandit(QT_ARMS)
    RAND_RESULT = randomized(BANDIT, QT_PLAYS)

    clear_screen()
    print(BANDIT)
    print(RAND_RESULT)
    